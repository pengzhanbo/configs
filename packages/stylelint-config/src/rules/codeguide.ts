import type { RuleOptions } from '@stylelint-types/stylelint-codeguide/types'

export const codeguideRules = {
  'codeguide/at-rule-name-case': 'lower',
  'codeguide/at-rule-name-newline-after': 'always-multi-line',
  'codeguide/at-rule-semicolon-newline-after': 'always',
  'codeguide/block-closing-brace-empty-line-before': 'never',
  'codeguide/block-closing-brace-newline-after': 'always',
  'codeguide/block-closing-brace-newline-before': 'always',
  'codeguide/block-closing-brace-space-after': 'always-single-line',
  'codeguide/block-closing-brace-space-before': 'always-single-line',
  'codeguide/block-opening-brace-newline-after': 'always',
  'codeguide/block-opening-brace-space-after': 'always-single-line',
  'codeguide/block-opening-brace-space-before': 'always',
  'codeguide/color-hex-case': 'lower',
  'codeguide/declaration-bang-space-after': 'never',
  'codeguide/declaration-bang-space-before': 'always',
  'codeguide/declaration-block-semicolon-newline-after': 'always',
  'codeguide/declaration-block-semicolon-newline-before': 'never-multi-line',
  'codeguide/declaration-block-semicolon-space-after': 'always-single-line',
  'codeguide/declaration-block-semicolon-space-before': 'never',
  'codeguide/declaration-block-trailing-semicolon': 'always',
  'codeguide/declaration-colon-newline-after': 'always-multi-line',
  'codeguide/declaration-colon-space-after': 'always-single-line',
  'codeguide/declaration-colon-space-before': 'never',
  'codeguide/function-comma-newline-after': 'always-multi-line',
  'codeguide/function-comma-newline-before': 'never-multi-line',
  'codeguide/function-comma-space-after': 'always-single-line',
  'codeguide/function-comma-space-before': 'never',
  'codeguide/function-max-empty-lines': 0,
  'codeguide/function-parentheses-space-inside': 'never-single-line',
  'codeguide/function-whitespace-after': 'always',
  'codeguide/indentation': [2, { baseIndentLevel: 0 }],
  'codeguide/max-empty-lines': 2,
  'codeguide/media-feature-colon-space-after': 'always',
  'codeguide/media-feature-colon-space-before': 'never',
  'codeguide/media-feature-name-case': 'lower',
  'codeguide/media-feature-parentheses-space-inside': 'never',
  'codeguide/media-feature-range-operator-space-after': 'always',
  'codeguide/media-feature-range-operator-space-before': 'always',
  'codeguide/media-query-list-comma-newline-after': 'always-multi-line',
  'codeguide/media-query-list-comma-newline-before': 'never-multi-line',
  'codeguide/media-query-list-comma-space-after': 'always-single-line',
  'codeguide/media-query-list-comma-space-before': 'never-single-line',
  'codeguide/no-eol-whitespace': true,
  'codeguide/no-extra-semicolons': true,
  'codeguide/no-missing-end-of-source-newline': true,
  'codeguide/number-leading-zero': 'always',
  'codeguide/number-no-trailing-zeros': true,
  'codeguide/property-case': 'lower',
  'codeguide/selector-attribute-brackets-space-inside': 'never',
  'codeguide/selector-attribute-operator-space-after': 'never',
  'codeguide/selector-attribute-operator-space-before': 'never',
  'codeguide/selector-combinator-space-after': 'always',
  'codeguide/selector-combinator-space-before': 'always',
  'codeguide/selector-descendant-combinator-no-non-space': true,
  'codeguide/selector-list-comma-newline-after': 'always',
  'codeguide/selector-list-comma-newline-before': 'never-multi-line',
  'codeguide/selector-list-comma-space-after': 'always-single-line',
  'codeguide/selector-list-comma-space-before': 'never',
  'codeguide/selector-max-empty-lines': 0,
  'codeguide/selector-pseudo-class-case': 'lower',
  'codeguide/selector-pseudo-class-parentheses-space-inside': 'never',
  'codeguide/selector-pseudo-element-case': 'lower',
  'codeguide/string-quotes': 'double',
  'codeguide/unit-case': 'lower',
  'codeguide/value-list-comma-newline-after': 'always-multi-line',
  'codeguide/value-list-comma-newline-before': 'never-multi-line',
  'codeguide/value-list-comma-space-after': 'always-single-line',
  'codeguide/value-list-comma-space-before': 'never',
  'codeguide/value-list-max-empty-lines': 0,
} as Partial<RuleOptions>
